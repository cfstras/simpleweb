server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name ${NGINX_HOST};
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    #location / {
    #    root   /srv/www/html;
    #    index  index.html index.htm;
    #}
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}
    #location ~ /\.ht {
    #    deny  all;
    #}
    
    return 301 https://${DOLLAR}host${DOLLAR}request_uri;
}
limit_conn_zone ${DOLLAR}server_name zone=perserver:10m;

# https://mozilla.github.io/server-side-tls/ssl-config-generator/
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${NGINX_HOST};
    
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Disable unsafe inline/eval, only allow loading of resources (images, fonts, scripts, etc.) over https
    # Note that this does not provide any XSS protection
    add_header Content-Security-Policy "default-src https://*.${NGINX_HOST}:443" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1; mode=block" always;
    add_header Referrer-Policy "same-origin" always;
    add_header X-Content-Type-Options "nosniff" always;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;

    resolver 8.8.8.8;

    limit_conn perserver ${MAX_CONNECTIONS};
    limit_rate ${MAX_BW_PER_CONN};
    limit_rate_after ${LIMIT_AFTER};
    
    location / {
        root   /www/html;
        index  index.html index.htm;
    }
    location /data {
        root   /www/html;
        autoindex on;
        auth_basic           "closed site";
        auth_basic_user_file /www/html/.ht_users;
    }

    location /.well-known/acme-challenge/ {
        auth_basic off;
        root /www/html/;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    #error_page  404              /404.html;

    location ~ /\.ht {
        deny  all;
    }
}
